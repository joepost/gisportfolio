[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am a spatial data analyst interested in urban systems, remote sensing, spatial epidemiology, and data development. Currently, I work in First Nations Health with the Australian Institute of Health and Welfare (AIHW).\nI am based in London, UK.\ne: joepost51@gmail.com"
  },
  {
    "objectID": "envs/Lib/site-packages/idna-3.4.dist-info/LICENSE.html",
    "href": "envs/Lib/site-packages/idna-3.4.dist-info/LICENSE.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2013-2021, Kim Davies All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "envs/Lib/site-packages/matplotlib/backends/web_backend/nbagg_uat.html",
    "href": "envs/Lib/site-packages/matplotlib/backends/web_backend/nbagg_uat.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "from imp import reload"
  },
  {
    "objectID": "envs/Lib/site-packages/matplotlib/backends/web_backend/nbagg_uat.html#uat-for-nbagg-backend.",
    "href": "envs/Lib/site-packages/matplotlib/backends/web_backend/nbagg_uat.html#uat-for-nbagg-backend.",
    "title": "Joe Post | Spatial Analyst",
    "section": "UAT for NbAgg backend.",
    "text": "UAT for NbAgg backend.\nThe first line simply reloads matplotlib, uses the nbagg backend and then reloads the backend, just to ensure we have the latest modification to the backend code. Note: The underlying JavaScript will not be updated by this process, so a refresh of the browser after clearing the output and saving is necessary to clear everything fully.\n\nimport matplotlib\nreload(matplotlib)\n\nmatplotlib.use('nbagg')\n\nimport matplotlib.backends.backend_nbagg\nreload(matplotlib.backends.backend_nbagg)\n\n\nUAT 1 - Simple figure creation using pyplot\nShould produce a figure window which is interactive with the pan and zoom buttons. (Do not press the close button, but any others may be used).\n\nimport matplotlib.backends.backend_webagg_core\nreload(matplotlib.backends.backend_webagg_core)\n\nimport matplotlib.pyplot as plt\nplt.interactive(False)\n\nfig1 = plt.figure()\nplt.plot(range(10))\n\nplt.show()\n\n\n\nUAT 2 - Creation of another figure, without the need to do plt.figure.\nAs above, a new figure should be created.\n\nplt.plot([3, 2, 1])\nplt.show()\n\n\n\nUAT 3 - Connection info\nThe printout should show that there are two figures which have active CommSockets, and no figures pending show.\n\nprint(matplotlib.backends.backend_nbagg.connection_info())\n\n\n\nUAT 4 - Closing figures\nClosing a specific figure instance should turn the figure into a plain image - the UI should have been removed. In this case, scroll back to the first figure and assert this is the case.\n\nplt.close(fig1)\nplt.close('all')\n\n\n\nUAT 5 - No show without plt.show in non-interactive mode\nSimply doing a plt.plot should not show a new figure, nor indeed update an existing one (easily verified in UAT 6). The output should simply be a list of Line2D instances.\n\nplt.plot(range(10))\n\n\n\nUAT 6 - Connection information\nWe just created a new figure, but didn’t show it. Connection info should no longer have “Figure 1” (as we closed it in UAT 4) and should have figure 2 and 3, with Figure 3 without any connections. There should be 1 figure pending.\n\nprint(matplotlib.backends.backend_nbagg.connection_info())\n\n\n\nUAT 7 - Show of previously created figure\nWe should be able to show a figure we’ve previously created. The following should produce two figure windows.\n\nplt.show()\nplt.figure()\nplt.plot(range(5))\nplt.show()\n\n\n\nUAT 8 - Interactive mode\nIn interactive mode, creating a line should result in a figure being shown.\n\nplt.interactive(True)\nplt.figure()\nplt.plot([3, 2, 1])\n\nSubsequent lines should be added to the existing figure, rather than creating a new one.\n\nplt.plot(range(3))\n\nCalling connection_info in interactive mode should not show any pending figures.\n\nprint(matplotlib.backends.backend_nbagg.connection_info())\n\nDisable interactive mode again.\n\nplt.interactive(False)\n\n\n\nUAT 9 - Multiple shows\nUnlike most of the other matplotlib backends, we may want to see a figure multiple times (with or without synchronisation between the views, though the former is not yet implemented). Assert that plt.gcf().canvas.manager.reshow() results in another figure window which is synchronised upon pan & zoom.\n\nplt.gcf().canvas.manager.reshow()\n\n\n\nUAT 10 - Saving notebook\nSaving the notebook (with CTRL+S or File->Save) should result in the saved notebook having static versions of the figures embedded within. The image should be the last update from user interaction and interactive plotting. (check by converting with ipython nbconvert <notebook>)\n\n\nUAT 11 - Creation of a new figure on second show\nCreate a figure, show it, then create a new axes and show it. The result should be a new figure.\nBUG: Sometimes this doesn’t work - not sure why (@pelson).\n\nfig = plt.figure()\nplt.axes()\nplt.show()\n\nplt.plot([1, 2, 3])\nplt.show()\n\n\n\nUAT 12 - OO interface\nShould produce a new figure and plot it.\n\nfrom matplotlib.backends.backend_nbagg import new_figure_manager,show\n\nmanager = new_figure_manager(1000)\nfig = manager.canvas.figure\nax = fig.add_subplot(1,1,1)\nax.plot([1,2,3])\nfig.show()"
  },
  {
    "objectID": "envs/Lib/site-packages/matplotlib/backends/web_backend/nbagg_uat.html#uat-13---animation",
    "href": "envs/Lib/site-packages/matplotlib/backends/web_backend/nbagg_uat.html#uat-13---animation",
    "title": "Joe Post | Spatial Analyst",
    "section": "UAT 13 - Animation",
    "text": "UAT 13 - Animation\nThe following should generate an animated line:\n\nimport matplotlib.animation as animation\nimport numpy as np\n\nfig, ax = plt.subplots()\n\nx = np.arange(0, 2*np.pi, 0.01)        # x-array\nline, = ax.plot(x, np.sin(x))\n\ndef animate(i):\n    line.set_ydata(np.sin(x+i/10.0))  # update the data\n    return line,\n\n#Init only required for blitting to give a clean slate.\ndef init():\n    line.set_ydata(np.ma.array(x, mask=True))\n    return line,\n\nani = animation.FuncAnimation(fig, animate, np.arange(1, 200), init_func=init,\n                              interval=100., blit=True)\nplt.show()\n\n\nUAT 14 - Keyboard shortcuts in IPython after close of figure\nAfter closing the previous figure (with the close button above the figure) the IPython keyboard shortcuts should still function.\n\n\nUAT 15 - Figure face colours\nThe nbagg honours all colours apart from that of the figure.patch. The two plots below should produce a figure with a red background. There should be no yellow figure.\n\nimport matplotlib\nmatplotlib.rcParams.update({'figure.facecolor': 'red',\n                            'savefig.facecolor': 'yellow'})\nplt.figure()\nplt.plot([3, 2, 1])\n\nplt.show()\n\n\n\nUAT 16 - Events\nPressing any keyboard key or mouse button (or scrolling) should cycle the line while the figure has focus. The figure should have focus by default when it is created and re-gain it by clicking on the canvas. Clicking anywhere outside of the figure should release focus, but moving the mouse out of the figure should not release focus.\n\nimport itertools\nfig, ax = plt.subplots()\nx = np.linspace(0,10,10000)\ny = np.sin(x)\nln, = ax.plot(x,y)\nevt = []\ncolors = iter(itertools.cycle(['r', 'g', 'b', 'k', 'c']))\ndef on_event(event):\n    if event.name.startswith('key'):\n        fig.suptitle('%s: %s' % (event.name, event.key))\n    elif event.name == 'scroll_event':\n        fig.suptitle('%s: %s' % (event.name, event.step))\n    else:\n        fig.suptitle('%s: %s' % (event.name, event.button))\n    evt.append(event)\n    ln.set_color(next(colors))\n    fig.canvas.draw()\n    fig.canvas.draw_idle()\n\nfig.canvas.mpl_connect('button_press_event', on_event)\nfig.canvas.mpl_connect('button_release_event', on_event)\nfig.canvas.mpl_connect('scroll_event', on_event)\nfig.canvas.mpl_connect('key_press_event', on_event)\nfig.canvas.mpl_connect('key_release_event', on_event)\n\nplt.show()\n\n\n\nUAT 17 - Timers\nSingle-shot timers follow a completely different code path in the nbagg backend than regular timers (such as those used in the animation example above.) The next set of tests ensures that both “regular” and “single-shot” timers work properly.\nThe following should show a simple clock that updates twice a second:\n\nimport time\n\nfig, ax = plt.subplots()\ntext = ax.text(0.5, 0.5, '', ha='center')\n\ndef update(text):\n    text.set(text=time.ctime())\n    text.axes.figure.canvas.draw()\n    \ntimer = fig.canvas.new_timer(500, [(update, [text], {})])\ntimer.start()\nplt.show()\n\nHowever, the following should only update once and then stop:\n\nfig, ax = plt.subplots()\ntext = ax.text(0.5, 0.5, '', ha='center') \ntimer = fig.canvas.new_timer(500, [(update, [text], {})])\n\ntimer.single_shot = True\ntimer.start()\n\nplt.show()\n\nAnd the next two examples should never show any visible text at all:\n\nfig, ax = plt.subplots()\ntext = ax.text(0.5, 0.5, '', ha='center')\ntimer = fig.canvas.new_timer(500, [(update, [text], {})])\n\ntimer.start()\ntimer.stop()\n\nplt.show()\n\n\nfig, ax = plt.subplots()\ntext = ax.text(0.5, 0.5, '', ha='center')\ntimer = fig.canvas.new_timer(500, [(update, [text], {})])\n\ntimer.single_shot = True\ntimer.start()\ntimer.stop()\n\nplt.show()\n\n\n\nUAT 18 - stopping figure when removed from DOM\nWhen the div that contains from the figure is removed from the DOM the figure should shut down it’s comm, and if the python-side figure has no more active comms, it should destroy the figure. Repeatedly running the cell below should always have the same figure number\n\nfig, ax = plt.subplots()\nax.plot(range(5))\nplt.show()\n\nRunning the cell below will re-show the figure. After this, re-running the cell above should result in a new figure number.\n\nfig.canvas.manager.reshow()\n\n\n\nUAT 19 - Blitting\nClicking on the figure should plot a green horizontal line moving up the axes.\n\nimport itertools\n\ncnt = itertools.count()\nbg = None\n\ndef onclick_handle(event):\n    \"\"\"Should draw elevating green line on each mouse click\"\"\"\n    global bg\n    if bg is None:\n        bg = ax.figure.canvas.copy_from_bbox(ax.bbox) \n    ax.figure.canvas.restore_region(bg)\n\n    cur_y = (next(cnt) % 10) * 0.1\n    ln.set_ydata([cur_y, cur_y])\n    ax.draw_artist(ln)\n    ax.figure.canvas.blit(ax.bbox)\n\nfig, ax = plt.subplots()\nax.plot([0, 1], [0, 1], 'r')\nln, = ax.plot([0, 1], [0, 0], 'g', animated=True)\nplt.show()\nax.figure.canvas.draw()\n\nax.figure.canvas.mpl_connect('button_press_event', onclick_handle)"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Autokill.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Autokill.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "import os\nimport signal\npid = os.getpid()\nos.kill(pid, signal.SIGTERM)"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Check History in Memory.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Check History in Memory.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "from IPython import get_ipython\n\n\nip = get_ipython()\nassert ip.history_manager.hist_file == ':memory:'"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Clear Output.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Clear Output.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "from __future__ import print_function\nfrom IPython.display import clear_output\n\n\nfor i in range(10):\n    clear_output()\n    print(i)\n\n9\n\n\n\nprint(\"Hello world\")\nclear_output()\n\n\nprint(\"Hello world\", end='')\nclear_output(wait=True)  # no output after this\n\nHello world\n\n\n\nprint(\"Hello\", end='')\nclear_output(wait=True)  # here we have new output after wait=True\nprint(\"world\", end='')\n\nworld\n\n\n\nhandle0 = display(\"Hello world\", display_id=\"id0\")\n\n'Hello world'\n\n\n\nhandle1 = display(\"Hello\", display_id=\"id1\")\n\n'world'\n\n\n\nhandle1.update('world')\n\n\nhandle2 = display(\"Hello world\", display_id=\"id2\")\nclear_output()  # clears all output, also with display_ids\n\n\nhandle3 = display(\"Hello world\", display_id=\"id3\")\nclear_output(wait=True)\n\n'Hello world'\n\n\n\nhandle4 = display(\"Hello\", display_id=\"id4\")\nclear_output(wait=True)\nprint('world', end='')\n\nworld\n\n\n\nhandle4.update('Hello world')  # it is cleared, so it should not show up in the above cell"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Disable Stdin.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Disable Stdin.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "try:\n    input = raw_input\nexcept:\n    pass\n\nname = input(\"name: \")"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Empty Cell.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Empty Cell.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "Test that executing skips over an empty cell.\n\n\"Code 1\"\n\n'Code 1'\n\n\n\n\"Code 2\"\n\n'Code 2'"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Error.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Error.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "0/0\n\nZeroDivisionError: division by zero"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Factorials.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Factorials.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "i, j = 1, 1\n\n\nfor m in range(10):\n    i, j = j, i + j\n    print(j)\n\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/HelloWorld.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/HelloWorld.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "print(\"Hello World\")\n\nHello World"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Inline Image.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Inline Image.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "from IPython.display import Image\n\n\nImage('python.png')"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Interrupt.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Interrupt.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "while True: continue\n\nKeyboardInterrupt: \n\n\n\nprint(\"done\")\n\ndone"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/JupyterWidgets.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/JupyterWidgets.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "import ipywidgets\nlabel = ipywidgets.Label('Hello World')\ndisplay(label)\n\n\n\n\n\n# it should also handle custom msg'es\nlabel.send({'msg': 'Hello'})"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Other Comms.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Other Comms.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "from comm import create_comm\n\n\ncomm = create_comm('this-comm-tests-a-missing-handler', data={'id': 'foo'})\n\n\ncomm.send(data={'id': 'bar'})"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Output.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Output.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "import ipywidgets as widgets\nfrom IPython.display import clear_output\noutput1 = widgets.Output()\noutput1\n\n\n\n\n\nprint(\"hi\")\nwith output1:\n    print(\"in output\")\n\nhi\n\n\n\nwith output1:\n    raise ValueError(\"trigger msg_type=error\")\n\n\nimport ipywidgets as widgets\noutput2 = widgets.Output()\noutput2\n\n\n\n\n\nprint(\"hi2\")\nwith output2:\n    print(\"in output2\")\n    clear_output(wait=True)\n\nhi2\n\n\n\nimport ipywidgets as widgets\noutput3 = widgets.Output()\noutput3\n\n\n\n\n\nprint(\"hi3\")\nwith output3:\n    print(\"hello\")\n    clear_output(wait=True)\n    print(\"world\")\n\nhi3\n\n\n\nimport ipywidgets as widgets\noutput4 = widgets.Output()\noutput4\n\n\n\n\n\nprint(\"hi4\")\nwith output4:\n    print(\"hello world\")\n    clear_output()\n\nhi4\n\n\n\nimport ipywidgets as widgets\noutput5 = widgets.Output()\noutput5\n\n\n\n\n\nprint(\"hi5\")\nwith output5:\n    display(\"hello world\") # this is not a stream but plain text\nclear_output()\n\n\nimport ipywidgets as widgets\noutput_outer = widgets.Output()\noutput_inner = widgets.Output()\noutput_inner\n\n\n\n\n\noutput_outer\n\n\n\n\n\nwith output_inner:\n    print('in inner')\n    with output_outer:\n        print('in outer')\n    print('also in inner')"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Parallel Execute A.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Parallel Execute A.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "Ensure notebooks can execute in parallel\nThis notebook uses a file system based “lock” to assert that two instances of the notebook kernel will run in parallel. Each instance writes to a file in a temporary directory, and then tries to read the other file from the temporary directory, so that running them in sequence will fail, but running them in parallel will succeed.\nTwo notebooks are launched, each which sets the this_notebook variable. One notebook is set to this_notebook = 'A' and the other this_notebook = 'B'.\n\nimport os\nimport os.path\nimport tempfile\nimport time\n\n\n# the variable this_notebook is injectected in a cell above by the test framework.\nthis_notebook = 'A'\nother_notebook = 'B'\ndirectory = os.environ['NBEXECUTE_TEST_PARALLEL_TMPDIR']\nwith open(os.path.join(directory, 'test_file_{}.txt'.format(this_notebook)), 'w') as f:\n    f.write('Hello from {}'.format(this_notebook))\n\n\nstart = time.time()\ntimeout = 5\nend = start + timeout\ntarget_file = os.path.join(directory, 'test_file_{}.txt'.format(other_notebook))\nwhile time.time() < end:\n    time.sleep(0.1)\n    if os.path.exists(target_file):\n        with open(target_file, 'r') as f:\n            text = f.read()\n        if text == 'Hello from {}'.format(other_notebook):\n            break\nelse:\n    assert False, \"Timed out – didn't get a message from {}\".format(other_notebook)"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Parallel Execute B.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Parallel Execute B.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "Ensure notebooks can execute in parallel\nThis notebook uses a file system based “lock” to assert that two instances of the notebook kernel will run in parallel. Each instance writes to a file in a temporary directory, and then tries to read the other file from the temporary directory, so that running them in sequence will fail, but running them in parallel will succeed.\nTwo notebooks are launched, each which sets the this_notebook variable. One notebook is set to this_notebook = 'A' and the other this_notebook = 'B'.\n\nimport os\nimport os.path\nimport tempfile\nimport time\n\n\n# the variable this_notebook is injectected in a cell above by the test framework.\nthis_notebook = 'B'\nother_notebook = 'A'\ndirectory = os.environ['NBEXECUTE_TEST_PARALLEL_TMPDIR']\nwith open(os.path.join(directory, 'test_file_{}.txt'.format(this_notebook)), 'w') as f:\n    f.write('Hello from {}'.format(this_notebook))\n\n\nstart = time.time()\ntimeout = 5\nend = start + timeout\ntarget_file = os.path.join(directory, 'test_file_{}.txt'.format(other_notebook))\nwhile time.time() < end:\n    time.sleep(0.1)\n    if os.path.exists(target_file):\n        with open(target_file, 'r') as f:\n            text = f.read()\n        if text == 'Hello from {}'.format(other_notebook):\n            break\nelse:\n    assert False, \"Timed out – didn't get a message from {}\".format(other_notebook)"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Skip Exceptions with Cell Tags.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Skip Exceptions with Cell Tags.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "import sys\nprint(\"hello\")\nprint(\"errorred\", file=sys.stderr)\n# üñîçø∂é\nraise Exception(\"message\")\n\nhello\n\n\nerrorred\n\n\nException: message\n\n\n\nprint('ok')\n\nok"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Skip Exceptions.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Skip Exceptions.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "# üñîçø∂é\nraise Exception(\"message\")\n\nException: message\n\n\n\nprint('ok')\n\nok"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Skip Execution with Cell Tag.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Skip Execution with Cell Tag.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "print(\"a long running cell\")\n\n\nprint('ok')\n\nok"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Sleep1s.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Sleep1s.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "import time\nimport datetime\n\n\nt0 = datetime.datetime.utcnow()\ntime.sleep(1)\nt1 = datetime.datetime.utcnow()\n\n\ntime_format = '%Y-%m-%dT%H:%M:%S.%fZ'\nprint(t0.strftime(time_format), end='')\n\n\nprint(t1.strftime(time_format), end='')"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/SVG.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/SVG.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "from IPython.display import SVG\n\n\nSVG(data='''\n<svg height=\"100\" width=\"100\">\n    <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"2\" fill=\"red\" />\n</svg>''')"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/Unicode.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/Unicode.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "print('☃')\n\n☃"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/UnicodePy3.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/UnicodePy3.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "print('☃')\n\n☃"
  },
  {
    "objectID": "envs/Lib/site-packages/nbclient/tests/files/update-display-id.html",
    "href": "envs/Lib/site-packages/nbclient/tests/files/update-display-id.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "ip = get_ipython()\n\nfrom IPython.display import display\n\ndef display_with_id(obj, display_id, update=False, execute_result=False):\n    iopub = ip.kernel.iopub_socket\n    session = get_ipython().kernel.session\n    data, md = ip.display_formatter.format(obj)\n    transient = {'display_id': str(display_id)}\n    content = {'data': data, 'metadata': md, 'transient': transient}\n    if execute_result:\n      msg_type = 'execute_result'\n      content['execution_count'] = ip.execution_count\n    else:\n      msg_type = 'update_display_data' if update else 'display_data'\n    session.send(iopub, msg_type, content, parent=ip.parent_header)\n\n\ndisplay('above')\ndisplay_with_id(1, 'here')\ndisplay('below')\n\n'above'\n\n\n8\n\n\n'below'\n\n\n\ndisplay_with_id(2, 'here')\ndisplay_with_id(3, 'there')\ndisplay_with_id(4, 'here')\n\n8\n\n\n6\n\n\n8\n\n\n\ndisplay_with_id(5, 'there')\ndisplay_with_id(6, 'there', update=True)\n\n6\n\n\n\ndisplay_with_id(7, 'here')\ndisplay_with_id(8, 'here', update=True)\ndisplay_with_id(9, 'result', execute_result=True)\n\n8\n\n\n10\n\n\n\ndisplay_with_id(10, 'result', update=True)"
  },
  {
    "objectID": "envs/Lib/site-packages/numpy/random/LICENSE.html",
    "href": "envs/Lib/site-packages/numpy/random/LICENSE.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "This software is dual-licensed under the The University of Illinois/NCSA Open Source License (NCSA) and The 3-Clause BSD License\n\nNCSA Open Source License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nDeveloped by: Kevin Sheppard (kevin.sheppard@economics.ox.ac.uk, kevin.k.sheppard@gmail.com) http://www.kevinsheppard.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal with the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimers in the documentation and/or other materials provided with the distribution.\nNeither the names of Kevin Sheppard, nor the names of any contributors may be used to endorse or promote products derived from this Software without specific prior written permission.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\n\n\n3-Clause BSD License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nComponents\nMany parts of this module have been derived from original sources, often the algorithm’s designer. Component licenses are located with the component code."
  },
  {
    "objectID": "envs/Lib/site-packages/pyzmq-25.1.2.dist-info/AUTHORS.html",
    "href": "envs/Lib/site-packages/pyzmq-25.1.2.dist-info/AUTHORS.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "This project was started and continues to be led by Brian E. Granger (ellisonbg AT gmail DOT com). Min Ragan-Kelley (benjaminrk AT gmail DOT com) is the primary developer of pyzmq at this time.\nThe following people have contributed to the project:\n\nAlexander Else (alexander DOT else AT team DOT telstra DOT com)\nAlexander Pyhalov (apyhalov AT gmail DOT com)\nAlexandr Emelin (frvzmb AT gmail DOT com)\nAmr Ali (amr AT ledgerx DOT com)\nAndre Caron (andre DOT l DOT caron AT gmail DOT com)\nAndrea Crotti (andrea DOT crotti DOT 0 AT gmail DOT com)\nAndrew Gwozdziewycz (git AT apgwoz DOT com)\nBaptiste Lepilleur (baptiste DOT lepilleur AT gmail DOT com)\nBrandyn A. White (bwhite AT dappervision DOT com)\nBrian E. Granger (ellisonbg AT gmail DOT com)\nBrian Hoffman (hoffman_brian AT bah DOT com)\nCarlos A. Rocha (carlos DOT rocha AT gmail DOT com)\nChris Laws (clawsicus AT gmail DOT com)\nChristian Wyglendowski (christian AT bu DOT mp)\nChristoph Gohlke (cgohlke AT uci DOT edu)\nCurtis (curtis AT tinbrain DOT net)\nCyril Holweck (cyril DOT holweck AT free DOT fr)\nDan Colish (dcolish AT gmail DOT com)\nDaniel Lundin (dln AT eintr DOT org)\nDaniel Truemper (truemped AT googlemail DOT com)\nDouglas Creager (douglas DOT creager AT redjack DOT com)\nEduardo Stalinho (eduardooc DOT 86 AT gmail DOT com)\nEren Güven (erenguven0 AT gmail DOT com)\nErick Tryzelaar (erick DOT tryzelaar AT gmail DOT com)\nErik Tollerud (erik DOT tollerud AT gmail DOT com)\nFELD Boris (lothiraldan AT gmail DOT com)\nFantix King (fantix DOT king AT gmail DOT com)\nFelipe Cruz (felipecruz AT loogica DOT net)\nFernando Perez (Fernando DOT Perez AT berkeley DOT edu)\nFrank Wiles (frank AT revsys DOT com)\nFélix-Antoine Fortin (felix DOT antoine DOT fortin AT gmail DOT com)\nGavrie Philipson (gavriep AT il DOT ibm DOT com)\nGodefroid Chapelle (gotcha AT bubblenet DOT be)\nGreg Banks (gbanks AT mybasis DOT com)\nGreg Ward (greg AT gerg DOT ca)\nGuido Goldstein (github AT a-nugget DOT de)\nIan Lee (IanLee1521 AT gmail DOT com)\nIonuț Arțăriși (ionut AT artarisi DOT eu)\nIvo Danihelka (ivo AT danihelka DOT net)\nIyed (iyed DOT bennour AT gmail DOT com)\nJim Garrison (jim AT garrison DOT cc)\nJohn Gallagher (johnkgallagher AT gmail DOT com)\nJulian Taylor (jtaylor DOT debian AT googlemail DOT com)\nJustin Bronder (jsbronder AT gmail DOT com)\nJustin Riley (justin DOT t DOT riley AT gmail DOT com)\nMarc Abramowitz (marc AT marc-abramowitz DOT com)\nMatthew Aburn (mattja6 AT gmail DOT com)\nMichel Pelletier (pelletier DOT michel AT gmail DOT com)\nMichel Zou (xantares09 AT hotmail DOT com)\nMin Ragan-Kelley (benjaminrk AT gmail DOT com)\nNell Hardcastle (nell AT dev-nell DOT com)\nNicholas Pilkington (nicholas DOT pilkington AT gmail DOT com)\nNicholas Piël (nicholas AT nichol DOT as)\nNick Pellegrino (npellegrino AT mozilla DOT com)\nNicolas Delaby (nicolas DOT delaby AT ezeep DOT com)\nOndrej Certik (ondrej AT certik DOT cz)\nPaul Colomiets (paul AT colomiets DOT name)\nPawel Jasinski (pawel DOT jasinski AT gmail DOT com)\nPhus Lu (phus DOT lu AT gmail DOT com)\nRobert Buchholz (rbu AT goodpoint DOT de)\nRobert Jordens (jordens AT gmail DOT com)\nRyan Cox (ryan DOT a DOT cox AT gmail DOT com)\nRyan Kelly (ryan AT rfk DOT id DOT au)\nScott Maxwell (scott AT codecobblers DOT com)\nScott Sadler (github AT mashi DOT org)\nSimon Knight (simon DOT knight AT gmail DOT com)\nStefan Friesel (sf AT cloudcontrol DOT de)\nStefan van der Walt (stefan AT sun DOT ac DOT za)\nStephen Diehl (stephen DOT m DOT diehl AT gmail DOT com)\nSylvain Corlay (scorlay AT bloomberg DOT net)\nThomas Kluyver (takowl AT gmail DOT com)\nThomas Spura (tomspur AT fedoraproject DOT org)\nTigger Bear (Tigger AT Tiggers-Mac-mini DOT local)\nTorsten Landschoff (torsten DOT landschoff AT dynamore DOT de)\nVadim Markovtsev (v DOT markovtsev AT samsung DOT com)\nYannick Hold (yannickhold AT gmail DOT com)\nZbigniew Jędrzejewski-Szmek (zbyszek AT in DOT waw DOT pl)\nhugo shi (hugoshi AT bleb2 DOT (none))\njdgleeson (jdgleeson AT mac DOT com)\nkyledj (kyle AT bucebuce DOT com)\nspez (steve AT hipmunk DOT com)\nstu (stuart DOT axon AT jpcreative DOT co DOT uk)\nxantares (xantares AT fujitsu-l64 DOT (none))\n\nas reported by:\ngit log --all --format='- %aN (%aE)' | sort -u | sed 's/@/ AT /1' | sed -e 's/\\.\\([^ ]\\)/ DOT \\1/g'\nwith some adjustments.\n\n\n\nBrandon Craig-Rhodes (brandon AT rhodesmill DOT org)\nEugene Chernyshov (chernyshov DOT eugene AT gmail DOT com)\nCraig Austin (craig DOT austin AT gmail DOT com)\n\n\n\n\n\nTravis Cline (travis DOT cline AT gmail DOT com)\nRyan Kelly (ryan AT rfk DOT id DOT au)\nZachary Voase (z AT zacharyvoase DOT com)"
  },
  {
    "objectID": "envs/Lib/site-packages/QtPy-2.4.1.dist-info/AUTHORS.html",
    "href": "envs/Lib/site-packages/QtPy-2.4.1.dist-info/AUTHORS.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "pyqode.qt: Colin Duquesnoy (@ColinDuquesnoy)\nspyderlib.qt: Pierre Raybaut (@PierreRaybaut)\nqt-helpers: Thomas Robitaille (@astrofrog)\n\n\n\n\n\nDaniel Althviz (@dalthviz)\nCarlos Cordoba (@ccordoba12)\nC.A.M. Gerlach (@CAM-Gerlach)\nSpyder Development Team (Spyder-IDE)\n\n\n\n\n\nThe QtPy Contributors"
  },
  {
    "objectID": "envs/Lib/site-packages/soupsieve-2.5.dist-info/licenses/LICENSE.html",
    "href": "envs/Lib/site-packages/soupsieve-2.5.dist-info/licenses/LICENSE.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "MIT License\nCopyright (c) 2018 - 2023 Isaac Muse isaacmuse@gmail.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "envs/Lib/site-packages/traitlets-5.7.1.dist-info/licenses/COPYING.html",
    "href": "envs/Lib/site-packages/traitlets-5.7.1.dist-info/licenses/COPYING.html",
    "title": "Joe Post | Spatial Analyst",
    "section": "",
    "text": "Traitlets is adapted from enthought.traits, Copyright (c) Enthought, Inc., under the terms of the Modified BSD License.\nThis project is licensed under the terms of the Modified BSD License (also known as New or Revised or 3-Clause BSD), as follows:\n\nCopyright (c) 2001-, IPython Development Team\n\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the IPython Development Team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nThe IPython Development Team is the set of all contributors to the IPython project. This includes all of the IPython subprojects.\nThe core team that coordinates development on GitHub can be found here: https://github.com/jupyter/.\n\n\n\nIPython uses a shared copyright model. Each contributor maintains copyright over their contributions to IPython. But, it is important to note that these contributions are typically only changes to the repositories. Thus, the IPython source code, in its entirety is not the copyright of any single person or institution. Instead, it is the collective copyright of the entire IPython Development Team. If individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the IPython repositories.\nWith this in mind, the following banner should be used in any source code file to indicate the copyright and license terms:\n# Copyright (c) IPython Development Team.\n# Distributed under the terms of the Modified BSD License."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GIS Portfolio",
    "section": "",
    "text": "Who am I?\nI am a spatial data analyst interested in urban systems, remote sensing, spatial epidemiology, and data development. Currently, I work in First Nations Health with the Australian Institute of Health and Welfare (AIHW). I am based in London, UK.\nWhat is this?\nThis is a GIS portfolio of some of my previous work, with examples of projects completed throughout professional roles, personal pursuits, and as part of my MSc in Urban Spatial Science at UCL Bartlett.\nPlease navigate through the tabs to view static work, interactive apps, my resume, and contact details for further information.\nThis website has been authored in markdown using Quarto open-source software and RStudio, published via Github Pages."
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Resume",
    "section": "",
    "text": "Education\nMSc Urban Spatial Science Bartlett Centre for Advanced Spatial Analysis (CASA), University College London, 2022 – 2023 | Distinction.\nBSc Honours, Epidemiology Murdoch Children’s Research Institute (MCRI), The University of Melbourne, 2018 | First Class Honours.\nBSc Environmental Science The University of Melbourne, 2015 – 2017 | First Class Honours.\nStudent Exchange The University of Helsinki, Finland, 2016.\n\n\nEmployment History\nSenior Analyst Australian Institute of Health and Welfare (AIHW), Indigenous Data Improvements Unit, Canberra (Remote), Oct 2022 – Present (part-time while studying)\n\nProject lead for the design and implementation of Australia’s National Child Death Register, including data governance, project management, policy research, feasibility analysis, development of metadata standards, and stakeholder engagement with state/territory authorities.\n\nHIV Registry Project Lead Alfred Hospital, Epidemiology & Data Management Service, Melbourne, Jan 2022 – Jul 2022\n\nLead the development and implementation of the Victorian HIV Service’s Clinical Quality Registry, a state-wide database and initiative to improve quality of care and coordinate standards across 12 Victorian hospitals and care providers.\n\nCOVID-19 Response Analyst Victorian Department of Health, Data, Intelligence, Modelling and Epidemiology (DIME) branch, Melbourne, Oct – Dec 2021\n\nSecondment to the Department of Health to provide analytical support for the COVID-19 response. Data analysis/programming in R and SQL to produce routine and on-demand COVID-19 data reports, collaboratively build complex and high-volume data workflows, and troubleshoot errors and data discrepancies.\n\nClinical Data Officer Alfred Hospital, Epidemiology & Data Management Service, Melbourne, Jan 2020 – Oct 2021\n\nDeputy Manager for a team of 6. Provided a broad range of database management, data analysis, and reporting for the clinical, research, and epidemiology activities of the Department of Infectious Diseases, including Infection Prevention and the Victorian HIV service.\nDelivered operational and analytical support for the Alfred Hospital’s COVID-19 pandemic response, incl. the build and management of a bespoke database monitoring testing results and notifications.\n\nData Analyst Australian Institute of Health and Welfare (AIHW), Indigenous Spatial Analysis Unit, Canberra, Jan 2019 – Jan 2020.\n\n2019 AIHW Graduate Program. Worked across large national databases incl. the Medicare Benefits Schedule Dataset and Australian Bureau of Statistics Census Datalab, and contributed authoring, analysis, mapping (Esri ArcGIS), dashboard design, and validation to several major institute reports.\n\nResearch Assistant Transport, Health, and Urban Design Research Hub, University of Melbourne, Aug 2017 – Jan 2019\n\nConducted literature reviews, analysis, and operational support for Hub research projects.\nCoordinated seminars, website management, communications, financial administration, and reporting and monitoring of research output and Hub KPIs.\n\n\n\nScholarships and Awards\n\nRae & Edith Bennett Prestigious Travelling Scholarship, 2022\nUniversity of Melbourne Dean’s Honour List, BSc (Hons), 2018\nMurdoch Children’s Research Institute Honours Scholarship, 2018\nMelbourne Global Mobility, Global Scholars Award, 2016\nInternational House, University of Melbourne, General Residential Scholarship, 2015 – 2016\nUniversity of Melbourne Kwong Lee Dow Young Scholar, 2014"
  },
  {
    "objectID": "shinyapps.html",
    "href": "shinyapps.html",
    "title": "Interactive Maps",
    "section": "",
    "text": "This map visualises the spatial distribution of Lower Layer Super Output Areas (LSOA) median price paid deciles for residential property sold between 1995 and 2019, for the local authority district of Hackney, London.\nData is sourced entirely from API data services, including:\nOrdnance Survey (OS) Data Hub\n\nOS Features API - allows user to query features within a number of OS’s data products. An Open Geospatial Consortium (OGC) compliant web feature service (WFS).\nOS Maps API - provides access to OS base mapping in a number of different styles and two projections, Web Mercator or British National Grid. Two end points are available: ZXY or Web Map Tile Service (WMTS).\nOS Downloads API - enables bulk download of OS open data products.\n\nHM Land Registry\n\nHM LR Linked Data API - enables querying of HM LR price paid data, transaction data, and the UK House Price Index.\n\nOffice for National Statistics (ONS)\n\nONS Open Geography Portal WFS API - OGC-compliant WFS that allows users to query features within a number of ONS’s open data products.\nONS Open Geography Portal ArcGIS REST API - an ESRI API specification that allows users to query features within ONS’s open data products.\n\n\nimport os\nimport fiona\nimport folium\nimport geopandas as gpd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom folium.plugins import FloatImage\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\n\n# ======================================================================================\n# Read in dataframes\ngdf_build_lsoa_diss = gpd.read_file(\"data/gdf_build_lsoa_diss.geojson\")\ngdf_yg_merge_churn = gpd.read_file(\"data/gdf_yg_merge_churn.geojson\")\n\n\n# ======================================================================================\n# Map interactively using folium\n\n# Obtain current date-time\ndate = datetime.now()\n\n\n# Create a folium basemap\nm = gdf_build_lsoa_diss.explore(\n        color='#a4a5a6',            # '#eaeaea',\n        tiles=\"CartoDB positron\",   # use \"CartoDB positron\" tiles\n        attr='Contains OS data © Crown copyright and database right {}'.format(date.year),\n        control_scale=False,        # remove scale (overlaps with OS logo)\n        tooltip=False,              # deactivate tooltip for base map features\n        style_kwds = {'stroke':False, 'fillOpacity':0.3},\n        highlight=False             # deactivate highlighting for base map features\n    )\n\ngdf_yg_merge_churn.explore(\n    m=m,\n    column=\"decile_change\",     # make choropleth based on column name\n    highlight=True,\n    highlight_kwds={'stroke':True, 'fillOpacity':1},    # specifies the formatting of highlighted features\n    tooltip='decile_change',\n    style_kwds = {'stroke':False, 'fillOpacity':0.7}\n)\n\n# OS logo image\nlogo_url = 'https://labs.os.uk/public/os-api-branding/v0.1.0/img/os-logo-maps.svg'\n# Folium FloatImage plugin for displaying an image on the map\nfloat_image = FloatImage(logo_url, bottom=1, left=1)\n# Add OS logo image to map\nfloat_image.add_to(m)\n\n# Return map object\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook"
  },
  {
    "objectID": "work.html",
    "href": "work.html",
    "title": "GIS Work",
    "section": "",
    "text": "The figures below comprise part of my MSc dissertation, conducted in partnership with the World Bank Water, Sanitation and Hygiene (WASH) division. The project used remote sensing data and spatial disaggregation to estimate the agricultural dependent population at a small area scale. This project involved 2 stages, (1) testing proof-of-concept on a subregion, the state of Karnataka in Western India, and (2) scaling up the analytical process to produce estimates for the whole of India. Analysis has been performed in Python, Google Earth Engine, and QGIS. I have also developed an interactive GEE web app to explore the results, which can be viewed here.\nFigures a–c are visualisations of the input datasets used in the population disaggregation model for Karnataka: WorldPop gridded population count, GHSL Settlement Model Grid (GHS-SMOD), and DynamicWorld-derived cropland cover, respectively. Figure d shows the output of the model.\n\n\n\nKarnataka sub-region maps"
  },
  {
    "objectID": "work.html#extended-urbanisation-in-the-gauteng-city-region",
    "href": "work.html#extended-urbanisation-in-the-gauteng-city-region",
    "title": "GIS Work",
    "section": "Extended urbanisation in the Gauteng City Region",
    "text": "Extended urbanisation in the Gauteng City Region\nThe Gauteng City-Region encompasses the combined metropolis of Johannesburg, Pretoria, and surrounds, and forms the largest urban agglomeration in South Africa. In this project, I worked with the Gauteng City Region Observatory to explore the spatial dimensions emerging from Quality of Life survey data, with a specific focus on peripheral settlements. The work was published as part of the GCRO’s ‘Map of the Month Series’, and the full report can be found here.\nThe project investigated dimensions of gendered travel across the region, commuting distance, and sense of belonging. The figure below examines respondents in peripheral communities who consider this neighbourhood as their ‘home’. The significance of belonging is an indicator of patterns of rural-to-urban migration from throughout South Africa, and the phenomenon of urban migrants maintaining a connection with their rural origins, including continued investment in a rural home at the expense of urban quality of life. This work was completed as part of a field course organised by the UCL Urban Lab.\n\n\n\nGCRO Map of the month"
  },
  {
    "objectID": "work.html#regional-insights-for-indigenous-communities",
    "href": "work.html#regional-insights-for-indigenous-communities",
    "title": "GIS Work",
    "section": "Regional insights for Indigenous communities",
    "text": "Regional insights for Indigenous communities\nThe Regional Insights for Indigenous Communities (RIFIC) website is a resource developed by the Australian Institute of Health and Welfare (AIHW) to bring together a range of regional statistic about the health and wellbeing of Aboriginal and Torres Strait Islander people in Australia. The aim of the website is to provide access to data at a local level, to help communities set their priorities and participate in joint planning with government and service providers.\nAs an analyst in the Spatial Analysis Unit at AIHW, I worked on the early stages of development for Regional Insights, built in Esri ArcGIS. Below is a screenshot from the Indigenous communities interactive map. To explore the website, see here.\n\n\n\nRIFIC screenshot"
  }
]